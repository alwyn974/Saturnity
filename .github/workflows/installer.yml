name: Installer Action

on:
  push:
    branches:
      - 'v*'
  workflow_dispatch:

jobs:
  linux_installer:
    runs-on: ubuntu-latest
    container: docker://alwyn974/rtype-build:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache libraries
        id: cache-libraries
        uses: actions/cache@v3
        with:
          path: ./build/_deps
          key: ${{ runner.os }}-libraries-${{ hashFiles('**/CMakeLists.txt') }}

      - name: Configure CMake
        shell: bash
        run: cmake -B ./build -S . -DSATURNITY_CPACK=ON

      - name: Build Release
        shell: bash
        run: cmake --build ./build --config Release -j`nproc`

      - name: Create Installer
        shell: bash
        working-directory: ./build
        run: cpack -G "DEB;RPM"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux_installer
          path: |
            build/Saturnity*.deb
            build/Saturnity*.rpm

  windows_installer:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache libraries
        id: cache-libraries
        uses: actions/cache@v3
        with:
          path: ./build/_deps
          key: ${{ runner.os }}-libraries-${{ hashFiles('**/CMakeLists.txt') }}

      - name: Configure CMake
        shell: bash
        run: cmake -B ./build -S . -DSATURNITY_CPACK=ON

      - name: Build Release
        shell: pwsh
        run: cmake --build ./build --config Release -j"$env:NUMBER_OF_PROCESSORS"

      - name: Create Installer
        shell: pwsh
        working-directory: ./build
        run: cpack -G "NSIS"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows_installer
          path: build/Saturnity*.exe

  create_release:
    needs:
      - linux_installer
      - windows_installer
    runs-on: ubuntu-latest
    steps:
      - name: Setup the release version
        id: version
        run: |
          echo "NAME=`basename ${{ github.ref }}` >> $GITHUB_OUTPUT"

      - name: Download all artifacts
        id: download_artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: |
            ${{ steps.download_artifacts.outputs.download-path }}/linux_installer/Saturnity*.deb
            ${{ steps.download_artifacts.outputs.download-path }}/linux_installer/Saturnity*.rpm
            ${{ steps.download_artifacts.outputs.download-path }}/windows_installer/Saturnity*.exe
          body: "Automated release of ${{ steps.version.outputs.NAME }}"
          generateReleaseNotes: true
          name: "Saturnity ${{ steps.version.outputs.NAME }}"
          tag: "${{ github.ref }}"